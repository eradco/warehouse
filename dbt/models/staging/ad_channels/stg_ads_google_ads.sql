WITH
{{ build_fivetran_ctes_from_one_schema_table(
    schema_base_name = 'google_ads', 
    table_name = 'AD_STATS', 
    columns = ['CUSTOMER_ID','DATE','_FIVETRAN_ID','CAMPAIGN_BASE_CAMPAIGN','CONVERSIONS_VALUE','CONVERSIONS','INTERACTIONS','AD_ID','AD_NETWORK_TYPE','INTERACTION_EVENT_TYPES','CAMPAIGN_ID','IMPRESSIONS','ACTIVE_VIEW_VIEWABILITY','AD_GROUP_ID','DEVICE','VIEW_THROUGH_CONVERSIONS','ACTIVE_VIEW_IMPRESSIONS','CLICKS','ACTIVE_VIEW_MEASURABLE_IMPRESSIONS','ACTIVE_VIEW_MEASURABLE_COST_MICROS','ACTIVE_VIEW_MEASURABILITY','AD_GROUP_BASE_AD_GROUP','COST_MICROS','_FIVETRAN_SYNCED'],
    cte_prefix='base') }}

,{{ build_fivetran_ctes_from_one_schema_table(
    schema_base_name = 'google_ads', 
    table_name = 'ACCOUNT_HISTORY', 
    columns = ['ID', 'CURRENCY_CODE', 'TIME_ZONE'],
    cte_prefix='ACCOUNT',
    cte_query_template = '
    SELECT DISTINCT
    ID,
    FIRST_VALUE(DESCRIPTIVE_NAME) over (partition by ID order by UPDATED_AT desc) as ACCOUNT_NAME,
    FIRST_VALUE(CURRENCY_CODE) over (partition by ID order by UPDATED_AT desc) as CURRENCY,
    FIRST_VALUE(TIME_ZONE) over (partition by ID order by UPDATED_AT desc) as TIMEZONE_NAME,
    {meta_columns} 
    FROM {schema}.{table} 
    LIMIT 1') }}
    
SELECT 
BASE_UNION.ERAD_CUSTOMER_ID,
BASE_UNION.CUSTOMER_ID,
ACCOUNT_UNION.CURRENCY,
ACCOUNT_UNION.TIMEZONE_NAME,
BASE_UNION.DATE,
{{ convert_to_erad_tz('BASE_UNION.DATE', 'ACCOUNT_UNION.TIMEZONE_NAME') }} as ERAD_TIMESTAMP,
BASE_UNION._FIVETRAN_ID,
BASE_UNION.CAMPAIGN_BASE_CAMPAIGN,
BASE_UNION.CONVERSIONS_VALUE,
BASE_UNION.CONVERSIONS,
BASE_UNION.INTERACTIONS,
BASE_UNION.AD_ID,
BASE_UNION.AD_NETWORK_TYPE,
BASE_UNION.INTERACTION_EVENT_TYPES,
BASE_UNION.CAMPAIGN_ID,
BASE_UNION.IMPRESSIONS,
BASE_UNION.ACTIVE_VIEW_VIEWABILITY,
BASE_UNION.AD_GROUP_ID,
BASE_UNION.DEVICE,
BASE_UNION.VIEW_THROUGH_CONVERSIONS,
BASE_UNION.ACTIVE_VIEW_IMPRESSIONS,
BASE_UNION.CLICKS,
BASE_UNION.ACTIVE_VIEW_MEASURABLE_IMPRESSIONS,
BASE_UNION.ACTIVE_VIEW_MEASURABLE_COST_MICROS,
BASE_UNION.ACTIVE_VIEW_MEASURABILITY,
BASE_UNION.AD_GROUP_BASE_AD_GROUP,
BASE_UNION.COST_MICROS,
BASE_UNION.COST_MICROS/1000000 AS COST,
{{ convert_to_erad_currency('CURRENCY' ,'COST') }} as ERAD_COST,
BASE_UNION._FIVETRAN_SYNCED,
BASE_UNION.ERAD_SCHEMA,
BASE_UNION.ERAD_TABLE,
current_timestamp()::timestamp_tz   as ERAD_UPDATED_AT
FROM BASE_UNION
INNER JOIN ACCOUNT_UNION ON (BASE_UNION.ERAD_CUSTOMER_ID = ACCOUNT_UNION.ERAD_CUSTOMER_ID)
